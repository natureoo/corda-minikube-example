apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: partya-filestore
provisioner: filestore.csi.storage.gke.io
volumeBindingMode: Immediate
allowVolumeExpansion: true
parameters:
  tier: standard
  network: vpctest1
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: podpvc
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: partya-filestore
  resources:
    requests:
      storage: 1Ti
---
apiVersion: "apps/v1"
kind: Deployment
metadata:
  name: party-a
spec:
  replicas: 1
  selector:
    matchLabels:
      app: party-a
  template:
    metadata:
      labels:
        app: party-a
    spec:
      containers:
      - name: node
        image: europe-west2-docker.pkg.dev/canvas-hook-339503/corda/corda:4.10
        env:
        - name: "CONFIG_FILE"
          value: "/config/party-a.conf"
        - name: "ROLE"
          value: "PARTY"
        ports:
        - containerPort: 10002
        volumeMounts:
        - name: config
          mountPath: /config
          readOnly: true
        - name: certificates
          mountPath: /app/certificates
        - name: mypvc
          mountPath: /app
#        - name: cordapps
#          mountPath: /app/cordapps
#      - name: web
#        image: europe-west2-docker.pkg.dev/canvas-hook-339503/corda/corda:4.10
#        args: ["web"]
#        env:
#        - name: "CONFIG_FILE"
#          value: "/config/party-a.conf"
#        ports:
#        - containerPort: 10004
#        volumeMounts:
#        - name: config
#          mountPath: /config
#          readOnly: true
#        - name: certificates
#          mountPath: /app/certificates
      volumes:
      - name: certificates
        emptyDir: {}
      - name: config
        configMap:
          name: corda
      - name: mypvc
          persistentVolumeClaim:
            claimName: podpvc
#      - name: cordapps
#        hostPath:
#          path: /home/feil_zou/corda4/corda-minikube-example/cordapps
